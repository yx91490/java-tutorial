(window.webpackJsonp=window.webpackJsonp||[]).push([[114],{569:function(t,a,n){"use strict";n.r(a);var e=n(27),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"并发"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#并发"}},[t._v("#")]),t._v(" 并发")]),t._v(" "),n("p",[t._v("计算机用户认为他们的系统一次可以做一件以上的事情。他们假设他们可以继续在文字处理器中工作，\n而其他应用程序下载文件，管理打印队列和流音频。通常，一个单一的应用程序通常会一次做一件事情。\n例如，流式音频应用程序必须同时从网络上读取数字音频，解压缩，管理播放和更新其显示。\n即使文字处理器也应该随时准备好响应键盘和鼠标事件，无论重新格式化文本或更新显示器多么忙碌。\n可以做这些事情的软件被称为 "),n("strong",[t._v("并发软件")]),t._v("。")]),t._v(" "),n("p",[t._v("Java 平台从根本上设计为支持并行编程，Java 编程语言和 Java 类库中具有基本的并发支持。\n自 5.0 版本以来，Java 平台还包括高级并发 API。本课介绍了平台的基本并发支持，并总结了一些 "),n("code",[t._v("java.util.concurrent")]),t._v(" 包中的高级 API 。")])])}),[],!1,null,null,null);a.default=r.exports}}]);