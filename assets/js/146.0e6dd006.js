(window.webpackJsonp=window.webpackJsonp||[]).push([[146],{615:function(t,e,r){"use strict";r.r(e);var a=r(27),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"线程对象"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#线程对象"}},[t._v("#")]),t._v(" 线程对象")]),t._v(" "),r("p",[t._v("每个线程与 "),r("code",[t._v("Thread")]),t._v(" 类的实例相关联。使用 "),r("code",[t._v("Thread")]),t._v(" 对象创建并发应用程序有两种基本策略。")]),t._v(" "),r("ul",[r("li",[t._v("为了直接控制线程创建和管理，只需在应用程序每次启动异步任务时实例化。")]),t._v(" "),r("li",[t._v("从应用程序的其余部分抽象线程管理，将应用程序的任务传递给执行程序。")])]),t._v(" "),r("p",[t._v("本节介绍 Thread 对象的使用。与 "),r("RouterLink",{attrs:{to:"/essential/concurrency/highlevel.html"}},[t._v("其他高级并发对象")]),t._v(" 的讨论。")],1)])}),[],!1,null,null,null);e.default=n.exports}}]);