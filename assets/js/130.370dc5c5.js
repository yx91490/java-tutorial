(window.webpackJsonp=window.webpackJsonp||[]).push([[130],{411:function(t,e,n){"use strict";n.r(e);var o=n(27),s=Object(o.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"joins"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#joins"}},[t._v("#")]),t._v(" joins")]),t._v(" "),n("p",[t._v("!不知道翻译成什么，加入？但是根据功能来看是等待该线程终止。")]),t._v(" "),n("p",[t._v("该 "),n("code",[t._v("join")]),t._v("（"),n("code",[t._v("t.join();")]),t._v("） 方法允许一个线程等待另一个线程的完成。如果 t 是 Thread 线程，\n当前正在执行的对象导致当前线程暂停执行直到 t 线程终止。可以指定等待时间，但是，\n与此相对 sleep，join 它取决于操作系统的时序，所以您不应该假设这 join 将等待您指定的时间。")]),t._v(" "),n("p",[t._v("还是推荐使用 sleep，加入响应一个中断退出的 interruptedexception")])])}),[],!1,null,null,null);e.default=s.exports}}]);