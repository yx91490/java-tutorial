(window.webpackJsonp=window.webpackJsonp||[]).push([[196],{705:function(e,t,n){"use strict";n.r(t);var r=n(27),a=Object(r.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"总结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[e._v("#")]),e._v(" 总结")]),e._v(" "),n("p",[e._v("该 "),n("code",[e._v("java.io")]),e._v(" 包包含许多类，您的程序可用于读取和写入数据。大多数类实现顺序访问流。\n顺序访问流可以分为两组：读写字节和读取和写入 Unicode 字符的字符串。\n每个顺序访问流都有一个专长，例如从文件读取或写入文件，过滤数据作为其读取或写入，或序列化对象。")]),e._v(" "),n("p",[e._v("该 "),n("code",[e._v("java.nio.file")]),e._v(" 包为文件和文件系统 I / O 提供广泛的支持。这是一个非常全面的 API，但关键入口点如下：")]),e._v(" "),n("ul",[n("li",[e._v("Path 有几个操作路径的方法。")]),e._v(" "),n("li",[e._v("Files 类有文件操作方法，如移动，复制，删除，也可用于读取和设置文件属性的方法。")]),e._v(" "),n("li",[e._v("FileSystem 有各种用于获取有关文件系统的信息的方法。")])]),e._v(" "),n("p",[e._v("有关 NIO.2 的更多信息，请参见 "),n("a",{attrs:{href:"https://community.oracle.com/community/java",target:"_blank",rel:"noopener noreferrer"}},[e._v("java.net"),n("OutboundLink")],1),e._v(" 上的\n"),n("a",{attrs:{href:"http://openjdk.java.net/projects/nio/",target:"_blank",rel:"noopener noreferrer"}},[e._v("OpenJDK：NIO 项目网站"),n("OutboundLink")],1),e._v(" 。\n本网站包含 NIO.2 提供的功能的资源，这些功能超出了本教程的范围，如多播，异步 I / O 以及创建自己的文件系统实现。")])])}),[],!1,null,null,null);t.default=a.exports}}]);