(window.webpackJsonp=window.webpackJsonp||[]).push([[89],{533:function(t,e,v){"use strict";v.r(e);var a=v(27),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"时间包"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#时间包"}},[t._v("#")]),t._v(" 时间包")]),t._v(" "),v("p",[t._v("Date-Time API 由主包 java.time 和四个子包组成：")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("java.time")]),t._v(" "),v("p",[t._v("表示日期和时间的 API 的核心。它包括日期，时间，日期和时间相结合的类别，\n时区/zones，瞬间/instants，持续时间/duration 和 时钟/clocks。这些类基于 ISO-8601 中定义的日历系统，\n并且不可变且线程安全。")])]),t._v(" "),v("li",[v("p",[t._v("java.time.chrono")]),t._v(" "),v("p",[t._v("用于表示除默认 ISO-8601 以外的日历系统的 API。您也可以定义自己的日历系统。本教程不包含任何细节。")])]),t._v(" "),v("li",[v("p",[t._v("java.time.format")]),t._v(" "),v("p",[t._v("用于格式化和分析日期和时间的类。")])]),t._v(" "),v("li",[v("p",[t._v("java.time.temporal")]),t._v(" "),v("p",[t._v("扩展 API 主要用于框架和库编写器，允许日期和时间类之间的互操作，查询和调整。字段（TemporalField 和 ChronoField）\n和单位（TemporalUnit 和 ChronoUnit）在此包中定义。")])]),t._v(" "),v("li",[v("p",[t._v("java.time.zone")]),t._v(" "),v("p",[t._v("支持时区的类，时区的偏移和时区规则。如果使用时区，大多数开发人员只需使用 "),v("strong",[t._v("ZonedDateTime")]),t._v(" 和 "),v("strong",[t._v("ZoneId")]),t._v(" 或 "),v("strong",[t._v("ZoneOffset")])])])])])}),[],!1,null,null,null);e.default=n.exports}}]);