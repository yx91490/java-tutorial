(window.webpackJsonp=window.webpackJsonp||[]).push([[203],{718:function(t,e,a){"use strict";a.r(e);var v=a(27),r=Object(v.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),a("p",[t._v("正则表达式是一种基于集合中每个字符串共享的共同特征来描述一组字符串的方法。它们可用于搜索，\n编辑或操纵文本和数据。您必须学习一种特定的语法来创建正则表达式 - 超出了Java 编程语言的正常语法。\n正则表达式的复杂性有所不同，但一旦了解了构造方式的基础知识，就可以解密（或创建）任何正则表达式。")]),t._v(" "),a("p",[t._v("这个教程教会 "),a("code",[t._v("java.util.regex")]),t._v(" API 支持的正则表达式语法，并提供了几个工作示例来说明各种对象如何交互。\n在正则表达式的世界中，有许多不同的语言可供选择，例如 grep、Perl、Tcl、Python、PHP 和 awk。\n"),a("code",[t._v("java.util.regex")]),t._v(" API 中的正则表达式语法与 Perl 中最常见的语法相似。")]),t._v(" "),a("h2",{attrs:{id:"这个包中如何表示正则表达式？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#这个包中如何表示正则表达式？"}},[t._v("#")]),t._v(" 这个包中如何表示正则表达式？")]),t._v(" "),a("p",[a("code",[t._v("java.util.regex")]),t._v(" 包主要包括三类： "),a("code",[t._v("Pattern")]),t._v("、"),a("code",[t._v("Matcher")]),t._v(" 和 "),a("code",[t._v("PatternSyntaxException")]),t._v("。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Pattern 对象是正则表达式的编译标识。没有提供公共的构造。\n要创建一个模式，您必须首先调用其中一个 "),a("code",[t._v("public static compile")]),t._v(" 方法，然后返回一个 "),a("code",[t._v("Pattern")]),t._v(" 对象。\n这些方法接受正则表达式作为第一个参数；这教程前几个例子将教你所需的语法。")])]),t._v(" "),a("li",[a("p",[t._v("Matcher 对象是解析器和针对输入字符串执行匹配操作的发动机。像 Patter 类一样，也没有定义公共的构造函数，\nMatcher 通过调用对象上的 matcher 方法来获取 Pattern 对象。")])]),t._v(" "),a("li",[a("p",[t._v("PatternSyntaxException 对象是一个未经检查的异常，其指示在正则表达式模式中的语法错误。")])])]),t._v(" "),a("p",[t._v("这个章节的最后几节详细的探讨了每个课程，但首先，您必须了解正则表达式的实际构造方式。因此下一节，将介绍一种将重复使用以探索其语法的简单测试工具。")])])}),[],!1,null,null,null);e.default=r.exports}}]);