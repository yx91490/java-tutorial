(window.webpackJsonp=window.webpackJsonp||[]).push([[208],{726:function(s,a,t){"use strict";t.r(a);var n=t(27),r=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"量词"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#量词"}},[s._v("#")]),s._v(" 量词")]),s._v(" "),t("p",[s._v("量词允许您指定要在匹配中出现的次数。为方便起见，Pattern API 规范描述的贪婪，不情愿，和占有量词如下所示。\n乍一看，它可能会出现的量词 X?，X？？ 和 X?+ 做同样的事，因为他们都承诺匹配 ”X，一次或根本没有”。\n有细微的差异，将在本节结尾附近加以解释")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("贪婪")]),s._v(" "),t("th",[s._v("不情愿的")]),s._v(" "),t("th",[s._v("占有")]),s._v(" "),t("th",[s._v("含义")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("X?")]),s._v(" "),t("td",[s._v("X??")]),s._v(" "),t("td",[s._v("X?+")]),s._v(" "),t("td",[s._v("X，一次或根本没有")])]),s._v(" "),t("tr",[t("td",[s._v("X*")]),s._v(" "),t("td",[s._v("X*?")]),s._v(" "),t("td",[s._v("X*+")]),s._v(" "),t("td",[s._v("X，零次或多次")])]),s._v(" "),t("tr",[t("td",[s._v("X+")]),s._v(" "),t("td",[s._v("X+?")]),s._v(" "),t("td",[s._v("X++")]),s._v(" "),t("td",[s._v("X，一次或多次")])]),s._v(" "),t("tr",[t("td",[s._v("X{n}")]),s._v(" "),t("td",[s._v("X{n}?")]),s._v(" "),t("td",[s._v("X{n}+")]),s._v(" "),t("td",[s._v("X，正好是n时间")])]),s._v(" "),t("tr",[t("td",[s._v("X{n,}")]),s._v(" "),t("td",[s._v("X{n,}?")]),s._v(" "),t("td",[s._v("X{n,}+")]),s._v(" "),t("td",[s._v("X，至少n时间")])]),s._v(" "),t("tr",[t("td",[s._v("X{n,m}")]),s._v(" "),t("td",[s._v("X{n,m}?")]),s._v(" "),t("td",[s._v("X{n,m}+")]),s._v(" "),t("td",[s._v("X，至少n但不超过m次数")])])])]),s._v(" "),t("p",[s._v("让我们从创建三个不同的正则表达式开始我们看看贪婪量词：字母 “A”，然后要么?，"),t("code",[s._v("* 或 +")]),s._v('。\n让我们看看当这些表达式对输入空字符（""）串进行测试时会发生什么：')]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test")]),s._v(" code "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"=== a?"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("regexTest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a?"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"=== a*"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("regexTest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a*"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"=== a+"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("regexTest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a+"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Output")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("No")]),s._v(" match found"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("h2",{attrs:{id:"零长度匹配"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#零长度匹配"}},[s._v("#")]),s._v(" 零长度匹配")]),s._v(" "),t("p",[s._v('在上述示例中，匹配在前两种情况下成功，因为表达式 a? 和 a* 两者都允许零出现该字母 a。\n您还会注意到，起始和结束索引都为零，这与我们迄今为止看到的任何示例不同。空输入字符串 "" 没有长度，\n因此测试在索引 0 上完全不匹配。这种匹配被称为零长度匹配。在几个情况下可能会发生零长度匹配：')]),s._v(" "),t("ol",[t("li",[s._v("在输入字符串的开头，")]),s._v(" "),t("li",[s._v("输入字符串的最后一个字符之后")]),s._v(" "),t("li",[s._v("输入字符串的任意两个字符之间的空输入字符串。")])]),s._v(" "),t("p",[s._v("零长度匹配很容易识别，因为它们总是在相同的索引位置开始和结束。")]),s._v(" "),t("p",[s._v("我们再来一些例子来探索零长度的匹配。将输入字符串更改为单个字母 “a”，您会注意到有趣的东西：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test")]),s._v(" code "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"=== a?"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("regexTest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a?"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"=== a*"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("regexTest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a*"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"=== a+"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("regexTest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a+"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Output")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("p",[s._v("所有三个量词都发现字母 “a”，但前两个也在索引 1 处找到零长度匹配; 也就是说，在输入字符串的最后一个字符之后。\n记住，"),t("strong",[s._v("匹配器将字符 “a” 看作是在索引 0 和索引 1 之间的单元格中")]),s._v("，并且我们的测试工具循环，\n直到它不能再找到匹配项。根据所使用的量词，在最后一个字符之后的索引处的 “无” 存在可能触发或可能不触发匹配。")]),s._v(" "),t("p",[s._v("现在连续五次将输入字符串更改为字母 “a”，您将得到以下内容：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test")]),s._v(" code "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"=== a?"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("regexTest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a?"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"aaaaa"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"=== a*"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("regexTest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a*"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"aaaaa"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"=== a+"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("regexTest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a+"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"aaaaa"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Output")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4.")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5.")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"aaaaa"')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5.")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"aaaaa"')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5.")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br")])]),t("p",[s._v("表达式 "),t("code",[s._v("a?")]),s._v(" 为每个字符找到一个单独的匹配，因为当 “a” 出现零或一次时，它匹配。\n该表达式 "),t("code",[s._v("a*")]),s._v(" 找到两个单独的匹配：第一个匹配中的所有字母 “a”，然后在索引 5 后的最后一个字符之后的零长度匹配。\n最后，"),t("code",[s._v("a+")]),s._v(" 匹配所有出现的字母“a”，忽略在最后一个索引处存在 “无”。")]),s._v(" "),t("p",[s._v("在这一点上，您可能会想知道如果前两个量词符遇到除 “a” 以外的字母，结果将会如何。例如，如果遇到字母 “b”，如 “ababaaaab” 那样会发生什么？")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test")]),s._v(" code "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"=== a?"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("regexTest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a?"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ababaaaab"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"=== a*"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("regexTest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a*"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ababaaaab"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"=== a+"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("regexTest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a+"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ababaaaab"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Output")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5.")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6.")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7.")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8.")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8.")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"aaaa"')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8.")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8.")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"aaaa"')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8.")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br")])]),t("p",[s._v("即使字母 “b” 出现在单元格 1,3 和 8 中，输出报告在这些位置的零长度匹配。正则表达式 a? 不是专门寻找字母 “b”;\n它只是寻找一个字母 “a” 的存在（或缺乏）。如果量词器允许 “a” 为零的匹配，则输入字符串中不是 “a” 的任何内容将显示为零长度匹配。\n剩余的 a 根据前面的例子中讨论的规则进行匹配。")]),s._v(" "),t("p",[s._v("要匹配一个模式正好 n 次，只需指定一组括号内的数字：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test")]),s._v(" code "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"=== a{3}"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("regexTest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a{3}"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"aa"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"=== a{3}"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("regexTest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a{3}"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"aaa"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"=== a{3}"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("regexTest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a{3}"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"aaaa"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Output")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("No")]),s._v(" match found"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"aaa"')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"aaa"')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("p",[s._v("这里，正则表达式 a{3} 正在搜索一行中的三个字母 “a”。第一个测试失败，因为没有足够的输入字符串来匹配。\n第二个测试在输入字符串中恰好包含 3 个 a，它触发一个匹配项。第三个测试也触发一个匹配，因为在输入字符串的开头恰好有 3 个 a。")]),s._v(" "),t("p",[s._v("以下任何事情与第一场匹配无关。如果该模式在该点之后再次出现，则会触发后续的匹配：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test")]),s._v(" code "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("regexTest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a{3}"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"aaaaaaaaa"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Output")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"aaa"')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"aaa"')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6.")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"aaa"')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9.")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("要求模式至少出现 n 次，在数字后添加一个逗号：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test")]),s._v(" code "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("regexTest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a{3,}"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"aaaaaaaaa"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Output")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"aaaaaaaaa"')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9.")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("使用相同的输入字符串，此测试仅发现一个匹配，因为连续的 9 个 a 满足 “至少” 3 a 的需要。")]),s._v(" "),t("p",[s._v("最后，要指定出现次数的上限，请在大括号内添加第二个数字：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test")]),s._v(" code "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("regexTest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a{3,6}"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"aaaaaaaaa"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Output")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"aaaaaa"')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6.")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"aaa"')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9.")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("这里第一场匹配被迫停在 6 个角色的上限。第二场匹配包括剩下的任何东西，恰好是三个 - 这个匹配允许的最少的字符数 3。\n如果输入字符串的字符短一个，则不会有第二个匹配，因为只剩下两个 a 了。")]),s._v(" "),t("h2",{attrs:{id:"捕获组和字符类与量词"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#捕获组和字符类与量词"}},[s._v("#")]),s._v(" 捕获组和字符类与量词")]),s._v(" "),t("p",[s._v("到目前为止，我们只测试了包含一个字符的输入字符串上的量词。事实上，量词只能一次附加到一个字符，\n所以正则表达式 “abc+” 将意味着“a，其后是 b，后跟 c 一次或多次”。这不意味着 “abc” 一次或多次。\n然而，量词也可以附加到"),t("RouterLink",{attrs:{to:"/essential/regex/char_classes.html"}},[s._v(" 字符类")]),s._v(" 和 "),t("RouterLink",{attrs:{to:"/essential/regex/groups.html"}},[s._v("捕获组")]),s._v("，例如 [abc]+（a 或 b 或 c，一次或多次）或 (abc)+（组“abc”，一次或多次）。")],1),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test")]),s._v(" code "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"===  (dog){3}"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("regexTest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(dog){3}"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"dogdogdogdogdogdog"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"===  dog{3}"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("regexTest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"dog{3}"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"dogdogdogdogdogdog"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Output")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("dog"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"dogdogdog"')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9.")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"dogdogdog"')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("18.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("  dog"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("No")]),s._v(" match found"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("p",[s._v("这里第一个例子找到三个匹配，因为量词适用于整个捕获组。删除括号，但匹配失败，因为量词 {3} 现在只适用于字母 “g”。")]),s._v(" "),t("p",[s._v("类似地，我们可以对整个字符类应用量词：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test")]),s._v(" code "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"===  [abc]{3}"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("regexTest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"[abc]{3}"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"abccabaaaccbbbc"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"===  abc{3}"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("regexTest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"abc{3}"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"abccabaaaccbbbc"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Output")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("abc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"abc"')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cab"')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6.")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"aaa"')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9.")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ccb"')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12.")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bbc"')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("15.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("  abc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("No")]),s._v(" match found"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("p",[s._v("这里，量词 "),t("code",[s._v("{3}")]),s._v(" 适用于第一个例子中的整个字符类，但仅适用于第二个字母的“c”。")]),s._v(" "),t("h2",{attrs:{id:"贪婪，不情愿和占有量词之间的差异"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#贪婪，不情愿和占有量词之间的差异"}},[s._v("#")]),s._v(" 贪婪，不情愿和占有量词之间的差异")]),s._v(" "),t("p",[s._v("贪心，不情愿和占有量词之间存在微妙的差异。")]),s._v(" "),t("p",[s._v("贪婪的量词被认为是 “"),t("strong",[s._v("贪心的")]),s._v("”，因为它们在尝试第一次匹配之前迫使匹配器读取或者吃掉整个输入字符串。\n如果第一个匹配尝试（整个输入字符串）失败，匹配器将输入字符串退出一个字符，然后再次尝试，重复该过程，\n直到找到一个匹配，或者没有更多的字符可以退出。根据表达式中使用的量词，匹配的最后一件事是 1 或 0 个字符。")]),s._v(" "),t("p",[s._v("然而，不情愿的量词采取相反的方法：它们从输入字符串的开头开始，然后一次不愿意吃一个字符寻找一个匹配。\n他们尝试的最后一件事是整个输入字符串。")]),s._v(" "),t("p",[s._v("最后，占有量词总是吃整个输入字符串，尝试一次（只有一次）进行匹配。与贪婪的量词不同，占有量词不会退回，即使这样做可以使整体匹配成功。")]),s._v(" "),t("p",[s._v("为了说明，考虑输入字符串  xfooxxxxxxfoo.")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test")]),s._v(" code "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"===  .*foo"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("regexTest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('".*foo"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"xfooxxxxxxfoo"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"===  .*?foo"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("regexTest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('".*?foo"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"xfooxxxxxxfoo"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"===  .*+foo"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("regexTest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('".*+foo"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"xfooxxxxxxfoo"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Output")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("*foo\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"xfooxxxxxxfoo"')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("13.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("*"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("foo\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"xfoo"')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4.")]),s._v("\n我发现文本中的 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"xxxxxxfoo"')]),s._v(" 在开始索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" 和 结束索引 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("13.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("*"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("foo\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("No")]),s._v(" match found"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("p",[s._v("第一个例子使用贪心量词 "),t("code",[s._v(".*")]),s._v(' 来查找“任何东西”，零次或多次，后跟字母 "f" "o" "o"。因为量词是贪心的，\n'),t("code",[s._v(".*")]),s._v(' 表达式的部分首先吃整个输入字符串。在这一点上，整个表达式不能成功，因为最后三个字母（"f" "o" "o"）已经被消耗了。\n所以，匹配器一次缓慢地退出一个字母，直到最右边的“foo”发生了反流，此时匹配成功，搜索结束。')]),s._v(" "),t("p",[s._v("然而，第二个例子是不情愿的，所以它首先消耗“没有”。因为 “foo” 没有出现在字符串的开始处，所以它被迫吞下第一个字母（一个“x”），\n它触发第一个匹配在 0 和 4.我们的测试工具继续进程，直到输入的字符串为累。在 4 和 13 发现另一场匹配。")]),s._v(" "),t("p",[s._v("第三个例子找不到匹配，因为量词是占有性的。在这种情况下，整个输入字符串被消耗. "),t("code",[s._v("*+")]),s._v("，\n没有剩下任何东西来满足表达式末尾的 “foo”。对于想要抓住所有东西而无需退缩的情况，使用占有量词的量词;\n在没有立即找到匹配的情况下，它将胜过相同的贪心量词。")]),s._v(" "),t("p",[s._v("上面的描述下面简单总结下：\n下面的例子都是表示： 任意字符出现一次或多次后面跟随 foo。")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("贪心 "),t("code",[s._v(".*foo")])]),s._v(" "),t("p",[s._v("贪心量词 "),t("code",[s._v(".*")]),s._v(" 首先会吃掉整个字符串，foo 也被包含在内，所以不满足要求，然后开始退格，直到把 foo 放出来，匹配成功")])]),s._v(" "),t("li",[t("p",[s._v("不情愿 "),t("code",[s._v(".*?foo")])]),s._v(" "),t("p",[s._v("不情愿量词 "),t("code",[s._v(".*?")]),s._v(" 从开始处开始，foo 不在开头，然后一个一个吃掉，直到遇到结尾为 foo 的单词，满足之后，\n剩余的则又重复一次，直到匹配完成，所以这里匹配到了两条")])]),s._v(" "),t("li",[t("p",[s._v("占有 "),t("code",[s._v(".*+foo")])]),s._v(" "),t("p",[s._v("占有量词 "),t("code",[s._v(".*+")]),s._v(" 整个字符串被 "),t("strong",[s._v("消耗")]),s._v("，没有剩下任何东西来匹配 foo，所以失败")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);