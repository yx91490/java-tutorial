(window.webpackJsonp=window.webpackJsonp||[]).push([[121],{578:function(e,t,a){"use strict";a.r(t);var s=a(27),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"执行器接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#执行器接口"}},[e._v("#")]),e._v(" 执行器接口")]),e._v(" "),a("p",[e._v("该 "),a("code",[e._v("java.util.concurrent")]),e._v(" 包定义了三个执行器接口：")]),e._v(" "),a("ul",[a("li",[e._v("Executor，一个支持启动新任务的简单接口。")]),e._v(" "),a("li",[e._v("ExecutorService，这是一个 Executor 的子接口，它增加了帮助管理生命周期的功能")]),e._v(" "),a("li",[e._v("ScheduledExecutorService，ExecutorService 的子类，支持任务的未来和/或定期执行。")])]),e._v(" "),a("p",[e._v("通常，引用执行器对象的变量被声明为这三种接口类型之一，而不是执行器类类型。")]),e._v(" "),a("h2",{attrs:{id:"executor-接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#executor-接口"}},[e._v("#")]),e._v(" Executor 接口")]),e._v(" "),a("p",[a("code",[e._v("Executor")]),e._v(" 接口提供了一种单一的方法，被设计为一个常用的线程创建方案的替换。\n如果 r 是一个 "),a("code",[e._v("Runnable")]),e._v("对象，e 是一个"),a("code",[e._v("Executor")]),e._v("对象")]),e._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Thread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("with")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token namespace"}},[e._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("execute")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("p",[e._v("但是 "),a("code",[e._v("execute")]),e._v(" 不太具体。低级的语法创建一个新线程并立即启动它。"),a("code",[e._v("Executor")]),e._v(" 可能会做同样的时间，\n但更有可能使用现有的工作线程来运行 r。也有可能将 r 放在队列中等待可用线程。")]),e._v(" "),a("p",[a("code",[e._v("java.util.concurrent.Executor")]),e._v(" 有两个更高级的子接口 "),a("code",[e._v("ExecutorService")]),e._v(" 和 "),a("code",[e._v("ScheduledExecutorService")]),e._v("接口")]),e._v(" "),a("h2",{attrs:{id:"executorservice-接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#executorservice-接口"}},[e._v("#")]),e._v(" ExecutorService 接口")]),e._v(" "),a("p",[e._v("提供了更通用的 "),a("code",[e._v("sbumit")]),e._v(" 方法。"),a("code",[e._v("sbumit")]),e._v(" 接受 "),a("code",[e._v("Runnable")]),e._v(" 和 "),a("code",[e._v("Callable")]),e._v(" 对象，这允许任务返回一个值。\n一个 "),a("code",[e._v("Future")]),e._v(" 对象，用于检索 "),a("code",[e._v("Callable")]),e._v(" 返回值并管理 Callable 和 Runnable 任务的状态。")]),e._v(" "),a("p",[a("code",[e._v("ExecutorService")]),e._v(" 还提供了提交大量 "),a("code",[e._v("Callable")]),e._v(" 对象集合的方法。最后，"),a("code",[e._v("ExecutorService")]),e._v(" 提供了一些管理执行程序关闭的方法。\n为了支持立即关机，任务必须处理中断异常。")]),e._v(" "),a("h2",{attrs:{id:"scheduledexecutorservice-接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scheduledexecutorservice-接口"}},[e._v("#")]),e._v(" ScheduledExecutorService 接口")]),e._v(" "),a("p",[e._v("扩充 "),a("code",[e._v("ExecutorService")]),e._v(" 接口，使其有调度 "),a("code",[e._v("schedule")]),e._v(" 功能，其执行 Runnable 或 Callable 在指定的延迟后的任务。\n此外，接口定义 "),a("code",[e._v("scheduleAtFixedRate")]),e._v(" 和 "),a("code",[e._v("scheduleWithFixedDelay")]),e._v(" 以规定的间隔重复执行指定的任务。")])])}),[],!1,null,null,null);t.default=r.exports}}]);