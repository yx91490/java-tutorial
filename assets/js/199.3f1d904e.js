(window.webpackJsonp=window.webpackJsonp||[]).push([[199],{712:function(v,_,e){"use strict";e.r(_);var o=e(27),d=Object(o.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h1",{attrs:{id:"问题与答案"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#问题与答案"}},[v._v("#")]),v._v(" 问题与答案")]),v._v(" "),e("ol",[e("li",[e("p",[v._v("问题：java.util.regex 包中主要的三个类是什么？作用是什么？")]),v._v(" "),e("ul",[e("li",[v._v("Pattern 是正则表达式的编译表示")]),v._v(" "),e("li",[v._v("Matcher 是解析模式并针对输入字符串执行匹配操作的引擎")]),v._v(" "),e("li",[v._v("PatternSyntaxException 定义一个未经检查的异常，指示正则表达式中的语法错误。")])])]),v._v(" "),e("li",[e("p",[v._v("问题：考虑字符串文字“foo”。什么是其实索引，什么是结束索引？")]),v._v(" "),e("p",[v._v("字符串中的每个字符都驻留在其自己的单元格中。指标位置执行单元格之间。字符串“foo”从索引 0 开始，以索引 3 结束，即使字符只占用单元格 0,1,2")])]),v._v(" "),e("li",[e("p",[v._v("问题：普通字符和元字符之间有什么区别？举个列子")]),v._v(" "),e("p",[v._v("正则表达式中的普通字符本身匹配。元字符是影响模式匹配方式的特殊字符。A 是一个普通的字符，标点符号 “.” 是匹配任何单个字符的元字符")])]),v._v(" "),e("li",[e("p",[v._v("问题： 如何把一个元字符转换成一个普通字符")]),v._v(" "),e("p",[v._v("有两种方法：")]),v._v(" "),e("ol",[e("li",[v._v("前面用反斜杠"),e("code",[v._v("\\")]),v._v(",如"),e("code",[v._v("\\\\.")])]),v._v(" "),e("li",[v._v("在引号表达式"),e("code",[v._v("\\Q")]),v._v("和"),e("code",[v._v("\\E")]),v._v("中间写上元字符，也就是标识开头和结尾把元字符包起来")])])]),v._v(" "),e("li",[e("p",[v._v("你把什么叫做方括号中的一组字符？这是什么？")]),v._v(" "),e("p",[v._v("这是一个字符类。它匹配括号之间的表达式指定的字符类中的任何单个字符。")])]),v._v(" "),e("li",[e("p",[v._v("预定义字符类："),e("code",[v._v("\\d")]),v._v("、"),e("code",[v._v("\\s")]),v._v("、"),e("code",[v._v("\\w")]),v._v("描述每一个的含义，以及对应的方括号标识的表达式")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("\\d")]),v._v(" 匹配任何数字    "),e("code",[v._v("[0-9]")])]),v._v(" "),e("li",[e("code",[v._v("\\s")]),v._v(" 匹配任何空白字符 "),e("code",[v._v("[ \\t\\n-x0B\\f\\r]")])]),v._v(" "),e("li",[e("code",[v._v("\\w")]),v._v(" 匹配单词字符    "),e("code",[v._v("[a-zA-Z_0-9]")])])])]),v._v(" "),e("li",[e("p",[v._v("预定义字符类："),e("code",[v._v("\\d")]),v._v("、"),e("code",[v._v("\\s")]),v._v("、"),e("code",[v._v("\\w")]),v._v(" 写出两个相反的表达式")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("\\d")]),v._v(" "),e("code",[v._v("\\D")]),v._v(" "),e("code",[v._v("[^\\d]")])]),v._v(" "),e("li",[e("code",[v._v("\\s")]),v._v(" "),e("code",[v._v("\\S")]),v._v(" "),e("code",[v._v("[^\\s]")])]),v._v(" "),e("li",[e("code",[v._v("\\w")]),v._v(" "),e("code",[v._v("\\W")]),v._v(" "),e("code",[v._v("[^\\w]")])])])]),v._v(" "),e("li",[e("p",[v._v("考虑正则表达式：“(dog){3}”.识别两个子表达式。表达式匹配什么字符串？")]),v._v(" "),e("p",[v._v("表达式包含一个捕获组"),e("code",[v._v("(dog)")]),v._v(".后跟随一个贪心量词"),e("code",[v._v("{3}")]),v._v(",它匹配的字符串“dogdogdog”")])]),v._v(" "),e("li",[e("p",[v._v("使用反向引用来编写一个与人名匹配的表达式，只有姓氏和名相同才算正确")]),v._v(" "),e("p",[e("code",[v._v("([A-Z][a-zA-Z]*)\\s\\1")]),v._v(" ; 外国人姓名和国人的不一样，还要求大写和 空格")])])])])}),[],!1,null,null,null);_.default=d.exports}}]);