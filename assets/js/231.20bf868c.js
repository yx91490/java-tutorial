(window.webpackJsonp=window.webpackJsonp||[]).push([[231],{766:function(a,t,e){"use strict";e.r(t);var s=e(27),n=Object(s.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"预定义注解类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#预定义注解类型"}},[a._v("#")]),a._v(" 预定义注解类型")]),a._v(" "),e("p"),e("div",{staticClass:"table-of-contents"},[e("ul",[e("li",[e("a",{attrs:{href:"#java-语言使用的注解类型"}},[a._v("Java 语言使用的注解类型")]),e("ul",[e("li",[e("a",{attrs:{href:"#deprecated"}},[a._v("@Deprecated")])]),e("li",[e("a",{attrs:{href:"#override"}},[a._v("@Override")])]),e("li",[e("a",{attrs:{href:"#suppresswarnings"}},[a._v("@SuppressWarnings")])])])]),e("li",[e("a",{attrs:{href:"#适用于其他注解的注解"}},[a._v("适用于其他注解的注解")]),e("ul",[e("li",[e("a",{attrs:{href:"#retention-指定标记注解的存储方式"}},[a._v("@Retention 指定标记注解的存储方式")])]),e("li",[e("a",{attrs:{href:"#documented"}},[a._v("@Documented")])]),e("li",[e("a",{attrs:{href:"#target"}},[a._v("@Target")])]),e("li",[e("a",{attrs:{href:"#inherited"}},[a._v("@Inherited")])]),e("li",[e("a",{attrs:{href:"#repeatable"}},[a._v("@Repeatable")])])])])])]),e("p"),a._v(" "),e("p",[a._v("一组注解类型是在 Java SE API 中预定义的。 一些注解类型由 Java 编译器使用，一些注解类型也使用于其他注解")]),a._v(" "),e("h2",{attrs:{id:"java-语言使用的注解类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#java-语言使用的注解类型"}},[a._v("#")]),a._v(" Java 语言使用的注解类型")]),a._v(" "),e("p",[e("code",[a._v("@Deprecated")]),a._v("、"),e("code",[a._v("@Override")]),a._v(" 和 "),e("code",[a._v("@SuppressWarnings")]),a._v(" 是在 "),e("code",[a._v("java.lang")]),a._v(" 中预定义的")]),a._v(" "),e("h3",{attrs:{id:"deprecated"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#deprecated"}},[a._v("#")]),a._v(" "),e("code",[a._v("@Deprecated")])]),a._v(" "),e("p",[e("code",[a._v("@Deprecated")]),a._v(" 注解表示标记的元素已被弃用，不应再使用。只要程序使用带 "),e("code",[a._v("@Deprecated")]),a._v(" 注解的方法，类或字段，编译器就会生成警告。当不推荐使用元素时，还应使用 Javadoc "),e("code",[a._v("@deprecated")]),a._v(" 标记进行记录，如以下示例所示。")]),a._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[a._v("TIP")]),a._v(" "),e("p",[a._v("JavaDoc 注释中有一个注解 "),e("code",[a._v("@deprecated")]),a._v(" 和 方法上的注解 "),e("code",[a._v("@Deprecated")]),a._v(" 的区别在于首字母的大小写。这不是偶然的：它们在概念上是相关的。")])]),a._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[a._v("   "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Javadoc comment follows")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/**\n     * @deprecated\n     * explanation of why it was deprecated\n     */")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Deprecated")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("deprecatedMethod")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br")])]),e("h3",{attrs:{id:"override"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#override"}},[a._v("#")]),a._v(" "),e("code",[a._v("@Override")])]),a._v(" "),e("p",[e("code",[a._v("@Override")]),a._v(" 注解通知编译器该元素意图覆盖在超类中声明的元素。接口和继承中将讨论覆盖方法 。")]),a._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[a._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//  标记方法作为超类的方法")]),a._v("\n   "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 已被覆盖")]),a._v("\n   "),e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Override")]),a._v("\n   "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("overriddenMethod")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br")])]),e("p",[a._v("虽然在覆盖方法时不需要使用此注解，但有助于防止错误。如果标记的方法 "),e("code",[a._v("@Override")]),a._v(" 无法正确覆盖其超类中的一个方法，则编译器会生成错误。")]),a._v(" "),e("h3",{attrs:{id:"suppresswarnings"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#suppresswarnings"}},[a._v("#")]),a._v(" "),e("code",[a._v("@SuppressWarnings")])]),a._v(" "),e("p",[e("code",[a._v("@SuppressWarnings")]),a._v(" 注解告诉编译器抑制它将会生成的特定警告。在以下示例中，使用了不推荐使用的方法，编译器通常会生成警告。但是，在这种情况下，注解会导致警告被抑制。")]),a._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 使用已弃用的方法，并告诉编译器产生警告")]),a._v("\n "),e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@SuppressWarnings")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"deprecation"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("useDeprecatedMethod")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// deprecation warning")]),a._v("\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// - suppressed")]),a._v("\n      objectOne"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("deprecatedMethod")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br")])]),e("p",[a._v("每个编译器警告都属于一个类别。Java 语言规范列出了两类："),e("code",[a._v("deprecation")]),a._v(" 和 "),e("code",[a._v("unchecked")]),a._v("。在与旧代码交互时，会发生警告；要抑制多个类别的警告，请使用以下语法：")]),a._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@SuppressWarnings")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"unchecked"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"deprecation"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("h2",{attrs:{id:"适用于其他注解的注解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#适用于其他注解的注解"}},[a._v("#")]),a._v(" 适用于其他注解的注解")]),a._v(" "),e("p",[a._v("适用于其他注解的注解称为 "),e("strong",[a._v("元注解")]),a._v(" 。在 "),e("code",[a._v("java.lang.annotation")]),a._v(" 中定义了几个元注解类型")]),a._v(" "),e("h3",{attrs:{id:"retention-指定标记注解的存储方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#retention-指定标记注解的存储方式"}},[a._v("#")]),a._v(" "),e("code",[a._v("@Retention")]),a._v(" 指定标记注解的存储方式")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("RetentionPolicy.SOURCE")]),a._v(" - 标记的注解仅在源级别保留，并被编译器忽略。")]),a._v(" "),e("li",[e("code",[a._v("RetentionPolicy.CLASS")]),a._v(" - 标记的注解由编译器在编译时保留，但被 Java 虚拟机（JVM）忽略。")]),a._v(" "),e("li",[e("code",[a._v("RetentionPolicy.RUNTIME")]),a._v(" - 标记的注解由 JVM 保留，因此可以由运行时环境使用。")])]),a._v(" "),e("h3",{attrs:{id:"documented"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#documented"}},[a._v("#")]),a._v(" "),e("code",[a._v("@Documented")])]),a._v(" "),e("p",[a._v("每当使用指定的注解时，应使用 Javadoc 工具记录这些元素。（默认情况下，注解不包括在 Javadoc 中。）有关详细信息，请参阅 "),e("a",{attrs:{href:"https://docs.oracle.com/javase/8/docs/technotes/guides/javadoc/index.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Javadoc 工具页面"),e("OutboundLink")],1),a._v("。")]),a._v(" "),e("h3",{attrs:{id:"target"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#target"}},[a._v("#")]),a._v(" "),e("code",[a._v("@Target")])]),a._v(" "),e("p",[a._v("标记另一个注解，以限制注解可应用于哪种类型的 Java 元素。目标注解指定以下元素类型之一作为其值：")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("ElementType.ANNOTATION_TYPE")]),a._v(" 可以应用于注解类型。")]),a._v(" "),e("li",[e("code",[a._v("ElementType.CONSTRUCTOR")]),a._v(" 可以应用于构造函数。")]),a._v(" "),e("li",[e("code",[a._v("ElementType.FIELD")]),a._v(" 可应用于字段。")]),a._v(" "),e("li",[e("code",[a._v("ElementType.LOCAL_VARIABLE")]),a._v(" 可以应用于局部变量。")]),a._v(" "),e("li",[e("code",[a._v("ElementType.METHOD")]),a._v(" 可以应用于方法级注解。")]),a._v(" "),e("li",[e("code",[a._v("ElementType.PACKAGE")]),a._v(" 可以应用于一个包的声明。")]),a._v(" "),e("li",[e("code",[a._v("ElementType.PARAMETER")]),a._v(" 可以应用于一个方法的参数。")]),a._v(" "),e("li",[e("code",[a._v("ElementType.TYPE")]),a._v(" 可以应用于类的任何元素。")])]),a._v(" "),e("h3",{attrs:{id:"inherited"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#inherited"}},[a._v("#")]),a._v(" "),e("code",[a._v("@Inherited")])]),a._v(" "),e("p",[a._v("表示注解类型可以从超级类继承（默认情况下不是这样）。当用户查询注解类型并且类没有此类型的注解时，会为该类的超类查询注解类型。此注解仅适用于类声明。")]),a._v(" "),e("h3",{attrs:{id:"repeatable"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#repeatable"}},[a._v("#")]),a._v(" "),e("code",[a._v("@Repeatable")])]),a._v(" "),e("p",[a._v("在 Java SE 8 中引入，表示标记的注解可以被多次应用于相同的声明或类型使用。有关详细信息，请参阅 "),e("RouterLink",{attrs:{to:"/java/annotations/repeating.html"}},[a._v("重复注解")]),a._v("。")],1)])}),[],!1,null,null,null);t.default=n.exports}}]);