(window.webpackJsonp=window.webpackJsonp||[]).push([[155],{630:function(t,e,s){"use strict";s.r(e);var n=s(27),a=Object(n.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"system-的其他方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#system-的其他方法"}},[t._v("#")]),t._v(" System 的其他方法")]),t._v(" "),s("p",[t._v("本节介绍一些 System 前面部分中没有介绍的方法。")]),t._v(" "),s("p",[t._v("arrayCopy ： 方法有效地在数组之间复制数据。有关详细信息，请参阅 语言基础课程中的 "),s("RouterLink",{attrs:{to:"/java/nutsandbolts/arrays.html"}},[t._v("数组")]),t._v("。")],1),t._v(" "),s("p",[s("code",[t._v("currentTimeMillis")]),t._v("(单位毫秒) 和 "),s("code",[t._v("nanoTime")]),t._v("(单位毫微妙) 方法可用于一个应用程序的执行期间测量的时间间隔是有用的。\n要测量以毫秒为单位的时间间隔，请在间隔 "),s("code",[t._v("currentTimeMillis")]),t._v(" 的开始和结束处调用两次，并减去从第二个值返回的第一个值。\n类似地，调用 "),s("code",[t._v("nanoTime")]),t._v(" 两次测量以毫秒为单位的间隔")]),t._v(" "),s("p",[t._v("exit ： 方法使 Java 虚拟机关闭，并具有由参数指定的整数退出状态。退出状态可用于启动应用程序的进程。\n按照惯例，退出状态 0 表示应用程序的正常终止，而任何其他值都是错误代码。")])])}),[],!1,null,null,null);e.default=a.exports}}]);