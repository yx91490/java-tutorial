(window.webpackJsonp=window.webpackJsonp||[]).push([[228],{760:function(t,a,e){"use strict";e.r(a);var s=e(27),v=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"注解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#注解"}},[t._v("#")]),t._v(" 注解")]),t._v(" "),e("p",[e("strong",[t._v("注解")]),t._v("，一种元数据形式提供了一个不属于程序本身的程序的数据。注解对他们注解的代码的操作没有直接的影响。")]),t._v(" "),e("p",[t._v("注解有很多用途，其中：")]),t._v(" "),e("ul",[e("li",[t._v("编译器的信息 - 编译器可以使用注解来检测错误或抑制警告。")]),t._v(" "),e("li",[t._v("编译和部署时处理 - 软件工具可以处理注解信息以生成代码，XML 文件等。")]),t._v(" "),e("li",[t._v("运行时处理 - 一些注解可以在运行时检查")])]),t._v(" "),e("p",[t._v("本课将说明可以使用注解的位置，如何应用注解，Java 平台，标准版（Java SE API）中可用的预定义注解类型，可插拔类型系统如何与可插拔类型的系统一起使用更强的编写代码类型检查，以及如何实现重复注解。")])])}),[],!1,null,null,null);a.default=v.exports}}]);