(window.webpackJsonp=window.webpackJsonp||[]).push([[202],{715:function(s,t,a){"use strict";a.r(t);var n=a(27),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"捕获组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#捕获组"}},[s._v("#")]),s._v(" 捕获组")]),s._v(" "),a("p",[s._v("在上 一节中，我们看到了量化器一次附加到一个字符，字符类或捕获组。但直到现在，我们还没有详细讨论捕获组的概念。")]),s._v(" "),a("p",[a("strong",[s._v("捕获组")]),s._v(" 是将多个字符视为单个单元的方式。它们是通过将要分组在一组括号内的字符来创建的。\n例如，正则表达式 "),a("code",[s._v("(dog)")]),s._v(' 创建包含字母单个组"d" "o" 和 "g"。与捕获组匹配的输入字符串的部分将保存在存储器中，\n以便以后通过反向引用进行调用（如下文“反向引用”部分所述）。')]),s._v(" "),a("h2",{attrs:{id:"编号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编号"}},[s._v("#")]),s._v(" 编号")]),s._v(" "),a("p",[s._v("如 Pattern API 中所述，捕获组通过从左到右计算其开始括号进行编号。在表达式中 "),a("code",[s._v("((A)(B(C)))")]),s._v(",有四个这样的组：")]),s._v(" "),a("ol",[a("li",[a("code",[s._v("((A)(B(C)))")])]),s._v(" "),a("li",[a("code",[s._v("(A)")])]),s._v(" "),a("li",[a("code",[s._v("(B(C))")])]),s._v(" "),a("li",[a("code",[s._v("(C)")])])]),s._v(" "),a("p",[s._v("要找出表达式中有多少组，请调用匹配器对象上的 "),a("code",[s._v("groupCount")]),s._v(" 方法,该 groupCount 方法返回 int，\n显示匹配器模式中存在的捕获组的数量。在此示例中，groupCount 将返回该数字 4，显示该模式包含 4 个捕获组。")]),s._v(" "),a("p",[s._v("还有一个特殊的组，组 0，它总是表示整个表达式。该组不包括在总报告中的 groupCount。开始的组(?是纯粹的非捕获组，不捕获文本，不计入组总数。（稍后在 Pattern 类的方法部分中将会看到非捕获组的示例 。）")]),s._v(" "),a("p",[s._v("了解组的编号很重要，因为某些 Matcher 方法接受 int 指定特定的组号作为参数：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("public int start(int group)")]),s._v(": 返回上次匹配操作期间给定组捕获的子序列的起始索引。")]),s._v(" "),a("li",[a("code",[s._v("public int end (int group)")]),s._v(": 返回上次匹配操作期间给定组捕获的最后一个字符的索引，加上一个子序列。")]),s._v(" "),a("li",[a("code",[s._v("public String group (int group):")]),s._v(" 返回在上一个匹配操作期间由给定组捕获的输入子序列。")])]),s._v(" "),a("h2",{attrs:{id:"反向引用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#反向引用"}},[s._v("#")]),s._v(" 反向引用")]),s._v(" "),a("p",[s._v("与捕获组匹配的输入字符串的部分保存在存储器中，以便以后通过反向引用进行调用。反向引用在正则表达式中指定为反斜杠"),a("code",[s._v("(\\)")]),s._v("，\n后跟数字，表示要调用的组的编号。例如，表达式 "),a("code",[s._v("(\\d\\d)")]),s._v(" 定义了一行匹配一行中的两位数的捕获组，后者可以通过反向引用在表达式中调用该捕获组 "),a("code",[s._v("\\1")]),s._v("。")]),s._v(" "),a("p",[s._v("要匹配任何2位数，后跟完全相同的两位数，您将使用 "),a("code",[s._v("(\\d\\d)\\1")]),s._v(" 正则表达式：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test")]),s._v(" code "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("regexTest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(\\\\d\\\\d)\\\\1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1212"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Output")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("\n我发现文本中的 "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1212"')]),s._v(" 在开始索引 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" 和 结束索引 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4.")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("如果您更改最后两位数字，则匹配将失败")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test")]),s._v(" code "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("regexTest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(\\\\d\\\\d)\\\\1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1223"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Output")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("No")]),s._v(" match found"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("        \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("对于嵌套捕获组，反向引用的工作方式完全相同：指定反斜杠后跟要调用的组的编号。")])])}),[],!1,null,null,null);t.default=e.exports}}]);