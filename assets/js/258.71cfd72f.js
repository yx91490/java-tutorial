(window.webpackJsonp=window.webpackJsonp||[]).push([[258],{698:function(t,a,e){"use strict";e.r(a);var n=e(27),s=Object(n.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"类型擦除"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#类型擦除"}},[t._v("#")]),t._v(" 类型擦除")]),t._v(" "),e("p",[t._v("泛型被引入到 Java 语言中以在编译时提供更严格的类型检查，并支持泛型编程。\n为了实现泛型，Java 编译器将类型擦除应用于：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("如果类型参数是无界的，则将泛型类型中的所有类型参数替换为它们的边界或对象。所产生的字节码因此只包含普通的类，接口和方法。")])]),t._v(" "),e("li",[e("p",[t._v("如果需要，插入类型可以保持类型安全。")])]),t._v(" "),e("li",[e("p",[t._v("生成桥接方法以保留扩展泛型类型中的多态性。")])])]),t._v(" "),e("p",[t._v("类型擦除确保没有为参数化类型创建新的类; 因此，泛型不会导致运行时开销。")])])}),[],!1,null,null,null);a.default=s.exports}}]);