(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{513:function(t,o,e){"use strict";e.r(o);var l=e(27),n=Object(l.a)({},(function(){var t=this,o=t.$createElement,e=t._self._c||o;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"clock"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#clock"}},[t._v("#")]),t._v(" clock")]),t._v(" "),e("p",[t._v("大多基于 temporal 对象都提供了一个无参数的 "),e("code",[t._v("now()")]),t._v(" 方法，它提供了使用系统时钟和默认时区的当前日期和时间。\n这些基于时间的对象还提供了一个单参数 now ("),e("a",{attrs:{href:"https://docs.oracle.com/javase/8/docs/api/java/time/Clock.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("clock"),e("OutboundLink")],1),t._v(") 方法，\n允许您传入另一个时钟。")]),t._v(" "),e("p",[t._v("当前日期和时间取决于时区，对于全球化应用程序，"),e("code",[t._v("clock")]),t._v(" 是确保日期/时间使用正确时区创建所必需的。\n因此，虽然 Clock 类的使用是可选的，但此功能允许您测试您的代码是否适用于其他时区，或者使用时间不变的固定时钟。")]),t._v(" "),e("p",[t._v("Clock 是一个抽象类，所以不能创建它的一个实例。以下工厂方法可用于测试。")]),t._v(" "),e("ul",[e("li",[t._v("Clock.offset（Clock，Duration）返回一个被指定持续时间偏移的时钟。")]),t._v(" "),e("li",[t._v("Clock.systemUTC（）返回表示格林尼治/ UTC 时区的时钟。")]),t._v(" "),e("li",[t._v("Clock.fixed（Instant，ZoneId）总是返回相同的 Instant。对于这个时钟，时间停滞不前。")])])])}),[],!1,null,null,null);o.default=n.exports}}]);