(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{470:function(t,e,v){"use strict";v.r(e);var a=v(27),_=Object(a.a)({},(function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"实现总结"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#实现总结"}},[t._v("#")]),t._v(" 实现总结")]),t._v(" "),v("p",[t._v("实现是用于存储集合的数据对象，实现接口课程中描述的 接口。")]),t._v(" "),v("p",[t._v("Java 集合框架提供了几个通用的核心接口实现：")]),t._v(" "),v("ul",[v("li",[t._v("对于 Set 接口，HashSet 是最常用的实现。")]),t._v(" "),v("li",[t._v("对于 List 接口，ArrayList 是最常用的实现。")]),t._v(" "),v("li",[t._v("对于 Map 接口，HashMap 是最常用的实现。")]),t._v(" "),v("li",[t._v("对于 Queue 接口，LinkedList 是最常用的实现。")]),t._v(" "),v("li",[t._v("对于 Deque 接口，ArrayDeque 是最常用的实现。")])]),t._v(" "),v("p",[t._v("每个通用实现提供其接口中包含的所有可选操作。")]),t._v(" "),v("p",[t._v("Java Collections Framework 还为需要非标准性能，使用限制或其他异常行为的情况提供了多种专用实现。")]),t._v(" "),v("p",[t._v("该 java.util.concurrent 包包含几个集合实现，它们是线程安全的，但不受单个排除锁管理。")]),t._v(" "),v("p",[t._v("Collections 类（相对于所述 Collection 接口）规定，或返回集合，这是已知的包装实施方式操作的静态方法。")]),t._v(" "),v("p",[t._v("最后，有几个 Convenience 实现，当你不需要他们的全部功能时，它可以比通用实现更有效。方便实现通过静态工厂方法提供。")])])}),[],!1,null,null,null);e.default=_.exports}}]);