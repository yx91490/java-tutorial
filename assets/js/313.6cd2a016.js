(window.webpackJsonp=window.webpackJsonp||[]).push([[313],{517:function(t,s,a){"use strict";a.r(s);var n=a(27),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"创建和使用类和对象的总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建和使用类和对象的总结"}},[t._v("#")]),t._v(" 创建和使用类和对象的总结")]),t._v(" "),a("p",[t._v("类声明命名该类，并在大括号之间封装类体。类名前面可以有修饰符。类体包含类的字段，方法和构造函数。类使用字段来包含状态信息并使用方法来实现行为。初始化类的新实例的构造方法使用类的名称，并且看起来像没有返回类型的方法。")]),t._v(" "),a("p",[t._v("您以相同的方式控制对类和成员的访问：通过使用访问修饰符（如 public 声明）。")]),t._v(" "),a("p",[t._v("您可以使用 static 成员声明中的关键字指定类变量或类方法。未声明为 static 实例成员的成员。类变量由类的所有实例共享，可以通过类名称以及实例引用进行访问。类的实例获取每个实例变量的自己的副本，这些变量必须通过实例引用来访问。")]),t._v(" "),a("p",[t._v("您可以通过使用 new 运算符和构造函数从类创建一个对象。new 作符返回对创建的对象的引用。您可以为变量分配引用或直接使用它。")]),t._v(" "),a("p",[t._v("可以通过使用限定名称来引用实例变量和方法，可以通过它们被声明的类之外的代码访问。实例变量的限定名称如下所示：")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("objectReference"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("variableName\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 方法的限定名称如下所示")]),t._v("\nobjectReference"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("methodName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("argumentList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nor"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n\nobjectReference"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("methodName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("垃圾收集器会自动清除未使用的对象。如果程序不再具有对它的引用，则对象未被使用。您可以通过设置保存引用的变量为 null 来显式删除引用。")])])}),[],!1,null,null,null);s.default=e.exports}}]);