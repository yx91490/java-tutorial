(window.webpackJsonp=window.webpackJsonp||[]).push([[113],{568:function(t,a,e){"use strict";e.r(a);var n=e(27),v=Object(n.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"基本类概述（必修）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基本类概述（必修）"}},[t._v("#")]),t._v(" 基本类概述（必修）")]),t._v(" "),e("p",[t._v("该章节讨论了Java平台中对大多数程序员来说至关重要的类。")]),t._v(" "),e("ul",[e("li",[e("p",[e("RouterLink",{attrs:{to:"/essential/exceptions/"}},[t._v("异常")])],1),t._v(" "),e("p",[t._v("说明异常机制以及它是如何用来处理错误和其他异常情况。本节描述了什么是异常，如何抛出和捕获异常，在异常被捕获后如何处理异常以及如何使用异常类层次结构。")])]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/essential/io/"}},[t._v("基础I/O")])],1),t._v(" "),e("p",[t._v("包括用于基本输入和输出的Java平台类。它主要侧重于 I / O流，一个强大的概念，大大简化了I / O操作。该课程还介绍了Serialization，它允许程序将整个对象写入流并再次读取它们。然后课程查看一些文件系统操作，包括随机访问文件。最后，简要介绍新的I / O API的高级功能")])]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/essential/concurrency/"}},[t._v("并发")])],1),t._v(" "),e("p",[t._v("说明了如何编写能够同时执行多个任务的应用程序。Java平台从根本上设计支持并发编程，在Java编程语言和Java类库中提供基本的并发支持。从版本5.0起，Java平台还包括高级并发API。本课程介绍了平台的基本并发支持，并总结了一些在高层次的APIjava.util.concurrent包。")])]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/essential/environment/"}},[t._v("平台环境")])],1),t._v(" "),e("p",[t._v("是由底层操作系统，Java虚拟机，类库，并在启动应用程序时提供各种配置数据确定的。本课描述了应用程序用于检查和配置其平台环境的一些API。")])]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/essential/regex/"}},[t._v("正则表达式")])],1),t._v(" "),e("p",[t._v("是用来描述一组的基础上通过在组中的每个串共享共同特征的串的方法。它们可用于搜索，编辑或操作文本和数据。正则表达式的复杂性各不相同，但是一旦你了解了它们的构造的基础知识，你就能够解译（或创建）任何正则表达式。这节课教所支持的正则表达式语法java.util.regex的API，并提出了若干工作的例子来说明如何将各种对象进行交互。")])])])])}),[],!1,null,null,null);a.default=v.exports}}]);